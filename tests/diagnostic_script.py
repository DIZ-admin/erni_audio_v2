#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è Erni_audio_v2
"""

import sys
import os
import json
from pathlib import Path

def main():
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è Erni_audio_v2")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
    print(f"üêç Python version: {sys.version}")
    print(f"üìÅ Working directory: {os.getcwd()}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
    print("\nüìÇ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:")
    required_dirs = ["pipeline", "data", "voiceprints", "logs"]
    for dir_name in required_dirs:
        if Path(dir_name).exists():
            print(f"  ‚úÖ {dir_name}/")
        else:
            print(f"  ‚ùå {dir_name}/ - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞
    print("\nüéµ –ê—É–¥–∏–æ—Ñ–∞–π–ª:")
    audio_file = Path("data/raw/Sitzung Erweiterte GL 17.04.2025.m4a")
    if audio_file.exists():
        size_mb = audio_file.stat().st_size / (1024 * 1024)
        print(f"  ‚úÖ {audio_file.name} ({size_mb:.1f} MB)")
    else:
        print(f"  ‚ùå {audio_file.name} - –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–µ–π
    print("\nüîë API –∫–ª—é—á–∏:")
    api_keys = {
        "PYANNOTEAI_API_TOKEN": os.getenv("PYANNOTEAI_API_TOKEN"),
        "PYANNOTE_API_KEY": os.getenv("PYANNOTE_API_KEY"),
        "OPENAI_API_KEY": os.getenv("OPENAI_API_KEY"),
        "REPLICATE_API_TOKEN": os.getenv("REPLICATE_API_TOKEN")
    }
    
    for key_name, key_value in api_keys.items():
        if key_value:
            masked_key = key_value[:8] + "..." + key_value[-4:] if len(key_value) > 12 else "***"
            print(f"  ‚úÖ {key_name}: {masked_key}")
        else:
            print(f"  ‚ùå {key_name}: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ voiceprints
    print("\nüë• Voiceprints:")
    vp_file = Path("voiceprints/voiceprints.json")
    if vp_file.exists():
        try:
            with open(vp_file, 'r', encoding='utf-8') as f:
                voiceprints = json.load(f)
            print(f"  ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {len(voiceprints)} voiceprints")
            for vp_id, vp_data in voiceprints.items():
                print(f"    - {vp_data.get('label', 'Unknown')} (ID: {vp_id[:8]}...)")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –±–∞–∑—ã: {e}")
    else:
        print(f"  ‚ùå {vp_file} - –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print("\nüì¶ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
    required_modules = ["requests", "pathlib", "json", "logging"]
    for module_name in required_modules:
        try:
            __import__(module_name)
            print(f"  ‚úÖ {module_name}")
        except ImportError:
            print(f"  ‚ùå {module_name} - –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print("\n" + "=" * 50)
    print("‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    main()
