version: '3.8'

services:
  erni-audio:
    build:
      context: .
      dockerfile: Dockerfile
    image: erni-audio-v2:latest
    container_name: erni-audio-pipeline
    
    # Переменные окружения
    environment:
      # API ключи (загружаются из .env файла)
      - PYANNOTEAI_API_TOKEN=${PYANNOTEAI_API_TOKEN:-}
      - PYANNOTE_API_KEY=${PYANNOTE_API_KEY:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - REPLICATE_API_TOKEN=${REPLICATE_API_TOKEN:-}
      
      # Конфигурация production
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - MAX_FILE_SIZE_MB=${MAX_FILE_SIZE_MB:-100}
      - MAX_CONCURRENT_JOBS=${MAX_CONCURRENT_JOBS:-3}
      - ENABLE_PERFORMANCE_METRICS=${ENABLE_PERFORMANCE_METRICS:-true}
      - ENABLE_HEALTH_CHECKS=${ENABLE_HEALTH_CHECKS:-true}
      
      # Безопасность
      - STRICT_MIME_VALIDATION=${STRICT_MIME_VALIDATION:-true}
      - REQUIRE_HTTPS_URLS=${REQUIRE_HTTPS_URLS:-true}
      - ENABLE_RATE_LIMITING=${ENABLE_RATE_LIMITING:-true}
      
      # Webhook настройки
      - PYANNOTEAI_WEBHOOK_SECRET=${PYANNOTEAI_WEBHOOK_SECRET:-}
      - WEBHOOK_SERVER_PORT=${WEBHOOK_SERVER_PORT:-8000}
      - WEBHOOK_SERVER_HOST=${WEBHOOK_SERVER_HOST:-0.0.0.0}
    
    # Порты
    ports:
      - "${WEBHOOK_SERVER_PORT:-8000}:8000"
    
    # Volumes для персистентности данных
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./voiceprints:/app/voiceprints
      - ./cache:/app/cache
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "health_check.py", "--json"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Restart policy
    restart: unless-stopped
    
    # Ресурсы
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.25'
    
    # Сеть
    networks:
      - erni-audio-network

  # Webhook сервер (отдельный сервис для production)
  webhook-server:
    build:
      context: .
      dockerfile: Dockerfile
    image: erni-audio-v2:latest
    container_name: erni-audio-webhook
    
    # Переопределяем команду для запуска webhook сервера
    command: ["python", "pipeline/webhook_server_cli.py", "--host", "0.0.0.0", "--port", "8001"]
    
    environment:
      - PYANNOTEAI_API_TOKEN=${PYANNOTEAI_API_TOKEN:-}
      - PYANNOTE_API_KEY=${PYANNOTE_API_KEY:-}
      - PYANNOTEAI_WEBHOOK_SECRET=${PYANNOTEAI_WEBHOOK_SECRET:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    
    ports:
      - "8001:8001"
    
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    
    restart: unless-stopped
    
    networks:
      - erni-audio-network
    
    # Зависимости
    depends_on:
      erni-audio:
        condition: service_healthy

networks:
  erni-audio-network:
    driver: bridge

# Volumes для персистентности данных
volumes:
  erni-audio-data:
    driver: local
  erni-audio-logs:
    driver: local
  erni-audio-voiceprints:
    driver: local
  erni-audio-cache:
    driver: local
